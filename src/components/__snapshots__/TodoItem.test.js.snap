// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoItem Component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoItem
    id="todo-1"
    title="Do house chores"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.label
          htmlFor="todo-1"
        >
          <input
            id="todo-1"
            type="checkbox"
          />
           
          Do house chores
        </styled.label>,
        <styled.button
          type="button"
        >
          Delete
        </styled.button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <input
              id="todo-1"
              type="checkbox"
            />,
            " ",
            "Do house chores",
          ],
          "htmlFor": "todo-1",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "todo-1",
              "type": "checkbox",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          " ",
          "Do house chores",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Delete",
          "type": "button",
        },
        "ref": null,
        "rendered": "Delete",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.label
            htmlFor="todo-1"
          >
            <input
              id="todo-1"
              type="checkbox"
            />
             
            Do house chores
          </styled.label>,
          <styled.button
            type="button"
          >
            Delete
          </styled.button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <input
                id="todo-1"
                type="checkbox"
              />,
              " ",
              "Do house chores",
            ],
            "htmlFor": "todo-1",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "todo-1",
                "type": "checkbox",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            " ",
            "Do house chores",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Delete",
            "type": "button",
          },
          "ref": null,
          "rendered": "Delete",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
